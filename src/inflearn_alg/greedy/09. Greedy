Greedy : 미래를 생각하지 않고 현재 시점에서 제일 좋은 것을 선택해 나가는 것

Priority Queue : 우선 순위 큐
    - 기본은 최소값이 우선순위가 높음
      (객체 생성시에 Collections.reversOrder()을 넣어주면 최대값이 먼저 나오게 설정 가능)
    - 사용되는 함수는 일반적인 Queue 와 동일

다익스트라 알고리즘
    - 목적지까지의 최단 경로 탐색 알고리즘
    - 원래 기본적인 방식으로 구하면 n^2 정도의 시간 복잡도
    - Priority Queue 를 활용하면 nlogn 정도의 시간 복잡도로 줄일 수 있음

최소 스패닝 트리 (MST : Minimum Spanning Tree)
    - 주어진 그래프의 모든 정점을 연결하는데, 가중치의 합이 최소인 트리
    - 그리디 방식으로 만들면 됨 -> 가중치 별로 정렬하고, 트리가 되도록 선택 해야 함
    - 방식은 두가지 존재 : 크루스칼, 프림
        1. 크루스칼
            - 모든 간선들의 가중치를 오름차순으로 정렬
            - 가중치가 가장 작은 간선을 선택
            - 선택한 간선의 정점이 연결되어 있지 않은 상태라면 연결 함 (그래프 형태가 되게 해서는 안됨)
            - 2, 3 번 과정을 반복
        2. 프림
            - 임의의 간선을 선택
            - 선택한 간선의 정점으로부터 가장 낮은 가중치를 갖는 정점을 선택
            - 모든 정점이 선택될 때까지 반복함
